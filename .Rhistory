tmp_cts <- rownames(AD_pseudo_mixture_cell_type_assignment$cdseq_prop_merged)
tmp_cts_idx <- match(tmp_cts,colnames(AD_scRNAseq_by_sample[[i]]$countsByCT))#which(colnames(AD_scRNAseq_by_sample[[i]]$countsByCT) %in% tmp_cts)
fig_name_corr <- paste0(fig_path,"Ad_mixtures_cdseq_comp_",i,"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_mat <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged[,i,]
rownames(tmp_mat) <- rownames(cdseq_estGEP)
colnames(tmp_mat) <- tmp_cts
scRNA_cell_type_corr_plot <- corrplot(tmp_mat,
AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx],
fig_name = fig_name_corr)
tmp_array_true_gep[,i,] <- AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx]
}
tmp_ct
dim(tmp_prop)
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged[i,,]
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene,
tmp_array_true_gep[i,,],
fig_name = fig_name_gene_corr)
}
dim(tmp_cdseq_gene)
dim(tmp_array_true_gep)
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged#[i,,]
for (j in 1:dim(tmp_cdseq_gene)[2]) {
tmp_cdseq_gene[,i,] <- t(t(tmp_cdseq_gene[,i,])/colSums(tmp_cdseq_gene[,i,]))
}
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene[i,,],
t(t(tmp_array_true_gep[i,,])/colSums(tmp_array_true_gep[i,,])),
fig_name = fig_name_gene_corr)
}
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged#[i,,]
for (j in 1:dim(tmp_cdseq_gene)[2]) {
tmp_cdseq_gene[,j,] <- t(t(tmp_cdseq_gene[,j,])/colSums(tmp_cdseq_gene[,j,]))
}
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene[i,,],
t(t(tmp_array_true_gep[i,,])/colSums(tmp_array_true_gep[i,,])),
fig_name = fig_name_gene_corr)
}
current_time <- gsub("-|\\s|:","_",Sys.time())
output_name <- paste0("CDSeq_cell_type_specific_var_validation_",current_time)#'GTEx_deconv_pipeline_test.RData'
output_location <- paste0("/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/",output_name,"/")
dir_create_status <- dir.create(file.path(output_location))#wd$cdseq_brain_output
if(isFALSE(dir_create_status )){
message("dir.create() is NOT successful probably because folder already exists :) ")
}
# we need to compare the estimated sample-specific-cell-type-specific GEPs for each individual
cdseq_est_idx <- 1#length(cell_type_number)
cdseq_estGEP <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estGEP
cdseq_estProp <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estProp
cdseq_gep_sample_specific <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$cellTypeAssignSplit
fig_path <- output_location#"/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/"
fig_name <- paste0("AD_mixture_cell_type_assignment_",cdseq_est_idx,"_",gsub("-|\\s|:","_",Sys.time()))
# use only scRNAseq from the corresponding individuals
pseudo_bulk <- AD_pseudo_bulk_3ct#AD_pseudo_bulk
sample_subset_idx <- which(AD_scRNAseq$colAnnotations$project_ID %in% colnames(pseudo_bulk)[sample_subset])
gene_subset_idx <- AD_pseudo_bulk_filtered_3ct$common_idx#AD_pseudo_bulk_filtered$common_idx
sc_annotation <- data.frame(cell_id = rownames(AD_scRNAseq$colAnnotations)[sample_subset_idx] , cell_type = AD_scRNAseq$colAnnotations$broad.cell.type[sample_subset_idx],stringsAsFactors = FALSE)
sc_annotation_subset <- sc_annotation[which(sc_annotation$cell_type %in% c('Ex','In','Opc')),]
sc_gep <-   AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ]
sc_gep_subset <- sc_gep[,which(colnames(sc_gep) %in% sc_annotation_subset$cell_id)]
AD_pseudo_mixture_cell_type_assignment <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_estGEP,
cdseq_prop = cdseq_estProp,
cdseq_gep_sample_specific = cdseq_gep_sample_specific,
sc_annotation = sc_annotation,#sc_annotation_subset,#,
sc_gep = AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ],#sc_gep_subset,#
seurat_count_threshold = 100,
seurat_nfeatures = 50,
seurat_npcs = 10,
seurat_dims = 1:10,
seurat_resolution = 3,
plot_umap=1,
plot_tsne=1,
fig_path = fig_path,
fig_name = fig_name,
fig_format = "jpeg",
fig_dpi = 100)
save(AD_pseudo_bulk_cdseq_result,AD_pseudo_mixture_cell_type_assignment,file =  paste0(output_location,"CDSeq_output_",current_time,".RData"))
tmp_array_true_gep <- array(0,dim = dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged),dimnames = dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged))
for (i in 1:length(sample_subset)) {
tmp_cts <- rownames(AD_pseudo_mixture_cell_type_assignment$cdseq_prop_merged)
tmp_cts_idx <- match(tmp_cts,colnames(AD_scRNAseq_by_sample[[i]]$countsByCT))#which(colnames(AD_scRNAseq_by_sample[[i]]$countsByCT) %in% tmp_cts)
fig_name_corr <- paste0(fig_path,"Ad_mixtures_cdseq_comp_",i,"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_mat <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged[,i,]
rownames(tmp_mat) <- rownames(cdseq_estGEP)
colnames(tmp_mat) <- tmp_cts
scRNA_cell_type_corr_plot <- corrplot(tmp_mat,
AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx],
fig_name = fig_name_corr)
tmp_array_true_gep[,i,] <- AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx]
}
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged#[i,,]
for (j in 1:dim(tmp_cdseq_gene)[2]) {
tmp_cdseq_gene[,j,] <- t(t(tmp_cdseq_gene[,j,])/colSums(tmp_cdseq_gene[,j,]))
}
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene[i,,],
t(t(tmp_array_true_gep[i,,])/colSums(tmp_array_true_gep[i,,])),
fig_name = fig_name_gene_corr)
}
for (i in dim(tmp_array_true_gep)[2]) {
tmp_array_true_gep[,i,] <- t(t(tmp_array_true_gep[,i,])/colSums(tmp_array_true_gep[,i,]))
}
colSums(tmp_array_true_gep[,i,])
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged#[i,,]
for (j in 1:dim(tmp_cdseq_gene)[2]) {
tmp_cdseq_gene[,j,] <- t(t(tmp_cdseq_gene[,j,])/colSums(tmp_cdseq_gene[,j,]))
}
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene[i,,],
tmp_array_true_gep[i,,],
fig_name = fig_name_gene_corr)
}
dim(AD_scRNAseq_by_sample[[i]]$countsByCT)
length(AD_scRNAseq_by_sample)
dim(AD_scRNAseq_by_sample[[1]]$countsByCT)
colnames(D_scRNAseq_by_sample[[1]]$countsByCT)
colnames(AD_scRNAseq_by_sample[[1]]$countsByCT)
cor(AD_scRNAseq_by_sample[[1]]$countsByCT)
sample_subset <- 1:10
cell_type_number <- seq(5,15,5)
AD_pseudo_bulk_cdseq_result <- CDSeq(bulk_data =AD_pseudo_bulk_filtered_3ct$seq_data_filtered[,sample_subset], #AD_pseudo_bulk_filtered$seq_data_filtered[,sample_subset],
beta = 0.5,
alpha = 5,
cell_type_number = cell_type_number,
mcmc_iterations = 1000,
dilution_factor = 50,
cpu_number = 10)
current_time <- gsub("-|\\s|:","_",Sys.time())
output_name <- paste0("CDSeq_cell_type_specific_var_validation_",current_time)#'GTEx_deconv_pipeline_test.RData'
output_location <- paste0("/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/",output_name,"/")
dir_create_status <- dir.create(file.path(output_location))#wd$cdseq_brain_output
if(isFALSE(dir_create_status )){
message("dir.create() is NOT successful probably because folder already exists :) ")
}
# we need to compare the estimated sample-specific-cell-type-specific GEPs for each individual
cdseq_est_idx <- 1#length(cell_type_number)
cdseq_estGEP <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estGEP
cdseq_estProp <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estProp
cdseq_gep_sample_specific <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$cellTypeAssignSplit
fig_path <- output_location#"/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/"
fig_name <- paste0("AD_mixture_cell_type_assignment_",cdseq_est_idx,"_",gsub("-|\\s|:","_",Sys.time()))
# use only scRNAseq from the corresponding individuals
pseudo_bulk <- AD_pseudo_bulk_3ct#AD_pseudo_bulk
sample_subset_idx <- which(AD_scRNAseq$colAnnotations$project_ID %in% colnames(pseudo_bulk)[sample_subset])
gene_subset_idx <- AD_pseudo_bulk_filtered_3ct$common_idx#AD_pseudo_bulk_filtered$common_idx
sc_annotation <- data.frame(cell_id = rownames(AD_scRNAseq$colAnnotations)[sample_subset_idx] , cell_type = AD_scRNAseq$colAnnotations$broad.cell.type[sample_subset_idx],stringsAsFactors = FALSE)
sc_annotation_subset <- sc_annotation[which(sc_annotation$cell_type %in% c('Ex','In','Opc')),]
sc_gep <-   AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ]
sc_gep_subset <- sc_gep[,which(colnames(sc_gep) %in% sc_annotation_subset$cell_id)]
AD_pseudo_mixture_cell_type_assignment <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_estGEP,
cdseq_prop = cdseq_estProp,
cdseq_gep_sample_specific = cdseq_gep_sample_specific,
sc_annotation = sc_annotation,#sc_annotation_subset,#,
sc_gep = AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ],#sc_gep_subset,#
seurat_count_threshold = 100,
seurat_nfeatures = 50,
seurat_npcs = 10,
seurat_dims = 1:10,
seurat_resolution = 3,
plot_umap=1,
plot_tsne=1,
fig_path = fig_path,
fig_name = fig_name,
fig_format = "jpeg",
fig_dpi = 100)
save(AD_pseudo_bulk_cdseq_result,AD_pseudo_mixture_cell_type_assignment,file =  paste0(output_location,"CDSeq_output_",current_time,".RData"))
tmp_array_true_gep <- array(0,dim = dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged),dimnames = dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged))
for (i in 1:length(sample_subset)) {
tmp_cts <- rownames(AD_pseudo_mixture_cell_type_assignment$cdseq_prop_merged)
tmp_cts_idx <- match(tmp_cts,colnames(AD_scRNAseq_by_sample[[i]]$countsByCT))#which(colnames(AD_scRNAseq_by_sample[[i]]$countsByCT) %in% tmp_cts)
fig_name_corr <- paste0(fig_path,"Ad_mixtures_cdseq_comp_",i,"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_mat <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged[,i,]
rownames(tmp_mat) <- rownames(cdseq_estGEP)
colnames(tmp_mat) <- tmp_cts
scRNA_cell_type_corr_plot <- corrplot(tmp_mat,
AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx],
fig_name = fig_name_corr)
tmp_array_true_gep[,i,] <- AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx]
}
for (i in dim(tmp_array_true_gep)[2]) {
tmp_array_true_gep[,i,] <- t(t(tmp_array_true_gep[,i,])/colSums(tmp_array_true_gep[,i,]))
}
# check gene-per-sample correlation across genes
for (i in 1:dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[1]) {
fig_name_gene_corr <- paste0(fig_path,"cdseq_gene_per_sample_corr",i,"_",dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged)[[1]][i],"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_cdseq_gene <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged#[i,,]
for (j in 1:dim(tmp_cdseq_gene)[2]) {
tmp_cdseq_gene[,j,] <- t(t(tmp_cdseq_gene[,j,])/colSums(tmp_cdseq_gene[,j,]))
}
cdseq_gene_persample_corr <- corrplot(tmp_cdseq_gene[i,,],
tmp_array_true_gep[i,,],
fig_name = fig_name_gene_corr)
}
current_time <- gsub("-|\\s|:","_",Sys.time())
output_name <- paste0("CDSeq_cell_type_specific_var_validation_",current_time)#'GTEx_deconv_pipeline_test.RData'
output_location <- paste0("/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/",output_name,"/")
dir_create_status <- dir.create(file.path(output_location))#wd$cdseq_brain_output
if(isFALSE(dir_create_status )){
message("dir.create() is NOT successful probably because folder already exists :) ")
}
# we need to compare the estimated sample-specific-cell-type-specific GEPs for each individual
cdseq_est_idx <- 2 #length(cell_type_number) #1
cdseq_estGEP <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estGEP
cdseq_estProp <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$estProp
cdseq_gep_sample_specific <- AD_pseudo_bulk_cdseq_result$est_all[[cdseq_est_idx]]$cellTypeAssignSplit
fig_path <- output_location#"/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation/"
fig_name <- paste0("AD_mixture_cell_type_assignment_",cdseq_est_idx,"_",gsub("-|\\s|:","_",Sys.time()))
# use only scRNAseq from the corresponding individuals
pseudo_bulk <- AD_pseudo_bulk_3ct#AD_pseudo_bulk
sample_subset_idx <- which(AD_scRNAseq$colAnnotations$project_ID %in% colnames(pseudo_bulk)[sample_subset])
gene_subset_idx <- AD_pseudo_bulk_filtered_3ct$common_idx#AD_pseudo_bulk_filtered$common_idx
sc_annotation <- data.frame(cell_id = rownames(AD_scRNAseq$colAnnotations)[sample_subset_idx] , cell_type = AD_scRNAseq$colAnnotations$broad.cell.type[sample_subset_idx],stringsAsFactors = FALSE)
sc_annotation_subset <- sc_annotation[which(sc_annotation$cell_type %in% c('Ex','In','Opc')),]
sc_gep <-   AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ]
sc_gep_subset <- sc_gep[,which(colnames(sc_gep) %in% sc_annotation_subset$cell_id)]
AD_pseudo_mixture_cell_type_assignment <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_estGEP,
cdseq_prop = cdseq_estProp,
cdseq_gep_sample_specific = cdseq_gep_sample_specific,
sc_annotation = sc_annotation,#sc_annotation_subset,#,
sc_gep = AD_scRNAseq$counts[ gene_subset_idx ,  sample_subset_idx ],#sc_gep_subset,#
seurat_count_threshold = 100,
seurat_nfeatures = 50,
seurat_npcs = 10,
seurat_dims = 1:10,
seurat_resolution = 3,
plot_umap=1,
plot_tsne=1,
fig_path = fig_path,
fig_name = fig_name,
fig_format = "jpeg",
fig_dpi = 100)
save(AD_pseudo_bulk_cdseq_result,AD_pseudo_mixture_cell_type_assignment,file =  paste0(output_location,"CDSeq_output_",current_time,".RData"))
tmp_array_true_gep <- array(0,dim = dim(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged),dimnames = dimnames(AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged))
for (i in 1:length(sample_subset)) {
tmp_cts <- rownames(AD_pseudo_mixture_cell_type_assignment$cdseq_prop_merged)
tmp_cts_idx <- match(tmp_cts,colnames(AD_scRNAseq_by_sample[[i]]$countsByCT))#which(colnames(AD_scRNAseq_by_sample[[i]]$countsByCT) %in% tmp_cts)
fig_name_corr <- paste0(fig_path,"Ad_mixtures_cdseq_comp_",i,"_",gsub("-|\\s|:","_",Sys.time()),".jpeg")
tmp_mat <- AD_pseudo_mixture_cell_type_assignment$cdseq_gep_sample_specific_merged[,i,]
rownames(tmp_mat) <- rownames(cdseq_estGEP)
colnames(tmp_mat) <- tmp_cts
scRNA_cell_type_corr_plot <- corrplot(tmp_mat,
AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx],
fig_name = fig_name_corr)
tmp_array_true_gep[,i,] <- AD_scRNAseq_by_sample[[i]]$countsByCT[gene_subset_idx, tmp_cts_idx]
}
##====================================================================================================================
##                                        example 2: experimental data
##====================================================================================================================
library(R.matlab)
ExptData<-readMat("/Users/kaikang/Dropbox/Public/NIH/Project_1_R_package/CDSeqRpackage_001/Deconvolution_Experimental_data_shrink_10.mat")
ExptMixGEP<-ExptData$WD
ExptGeneLength <- ExptData$el.wd
ExptRefGEP <- ExptData$cells.filered.wd
ExptTrueRPKM <- ExptData$phi.org.rpkm
ExptTrueGeneRate <- ExptData$phi.org.gene.wd
ExptTrueReadRate <- ExptData$phi.org.read.wd
ExptTruePropRNAadj <- ExptData$theta.adjcont
ExptTruePropRNA <-ExptData$theta
devtools::document()
library(CDSeq)
# Reduce Recover
result_Expt_RR <- CDSeq(bulk_data =  ExptMixGEP, cell_type_number = 4, mcmc_iterations = 700, dilution_factor = 1, gene_subset_size = 500,
block_number =  7, gene_length = as.vector(ExptGeneLength), reference_gep = ExptRefGEP,cpu_number = 10)
View(ExptGeneLength)
# plot result
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
plot(ExptTrueRPKM[,i],result_Expt_RR$estGEP[,j])
lines(c(0,8500),c(0,8500),type = "l")
}
}
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
plot(ExptTruePropRNAadj[,i],result_Expt_RR$estProp[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
ls(ExptData)
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
plot(ExptTruePropRNA[,i],result_Expt_RR$estProp[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
dim(result_Expt_RR$estProp)
colSums(ExptTruePropRNAadj)
colSums(ExptRefGEP)
tmp<-result_Expt_RR$estProp*colSums(ExptRefGEP)
rnaprop<-t(t(tmp)/colSums(tmp))
dim(rnaprop)
colSums(rnaprop)
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
#plot(ExptTruePropRNAadj[,i],result_Expt_RR$estProp[j,])
plot(ExptTruePropRNAadj[,i],rnaprop[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
tmp<-result_Expt_RR$estProp/colSums(ExptRefGEP)
rnaprop<-t(t(tmp)/colSums(tmp))
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
#plot(ExptTruePropRNAadj[,i],result_Expt_RR$estProp[j,])
plot(ExptTruePropRNAadj[,i],rnaprop[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
dim(result_Expt_RR$estProp)
colnames(result_Expt_RR$estProp)
rownames(result_Expt_RR$estProp)
tmp<-result_Expt_RR$estProp/colSums(ExptRefGEP[,c(3,1,2,4)])
rnaprop<-t(t(tmp)/colSums(tmp))
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
#plot(ExptTruePropRNAadj[,i],result_Expt_RR$estProp[j,])
plot(ExptTruePropRNAadj[,i],rnaprop[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
tmp<-result_Expt_RR$estProp*colSums(ExptRefGEP[,c(3,1,2,4)])
rnaprop<-t(t(tmp)/colSums(tmp))
par(mar=c(1,1,1,1))
par(mfrow=c(4,4))
for (i in 1:4) {
for (j in 1:4) {
#plot(ExptTruePropRNAadj[,i],result_Expt_RR$estProp[j,])
plot(ExptTruePropRNAadj[,i],rnaprop[j,])
lines(c(0,.5),c(0,.5), type = "l")
}
}
# expriment data estiamted GEPs
# matrix to data frame and merge
library(ggplot2)
library(ggpubr)
rownames(ExptTrueRPKM) <- paste("gene",1:nrow(ExptTrueRPKM),sep = "_")
colnames(ExptTrueRPKM) <- paste("ref_cell_type",1:ncol(ExptTrueRPKM),sep = "_")
exptTrueRPKM_df <- as.data.frame(ExptTrueRPKM)
#rownames(result_Expt$estGEP) <- paste("gene",1:nrow(result_Expt$estGEP),sep = "_")
#colnames(result_Expt$estGEP) <- paste("ref_cell_type",1:ncol(result_Expt$estGEP),sep = "_")
result_Expt_df <- as.data.frame(result_Expt$estGEP)
exptData_output_GEP_R <- merge(exptTrueRPKM_df,result_Expt$estGEP,by="row.names")
#rownames(result_Expt$estGEP) <- paste("gene",1:nrow(result_Expt$estGEP),sep = "_")
#colnames(result_Expt$estGEP) <- paste("ref_cell_type",1:ncol(result_Expt$estGEP),sep = "_")
result_Expt_df <- as.data.frame(result_Expt_RR$estGEP)
exptData_output_GEP_R <- merge(exptTrueRPKM_df,result_Expt_RR$estGEP,by="row.names")
# plot GEPs estimated by R
ts<-30  # figure title size
ats<-25 # axis ticks size
cs<-12  # correlations legend size
clr<-"black"
dotsize <- 4
dotshade <- 0.7
#ts<-10
#cs<-3
limts<-8600
pstn<-8500
fig_expt_GEP_1 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_1.x", y ="ref_cell_type_1.y", color = clr, title = "Tumor MCF7",
#xlab = "True RPKM", ylab = "Estimated RPKM",
#ylab = "Estimated RPKM (R)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) + ylab("GEPs estimations") +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title.y = element_text(face = "bold",size = ts),axis.title.x =element_blank())
fig_expt_GEP_2 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_2.x", y ="ref_cell_type_2.y", color = clr, title = "CAFs Hs 343T",
#xlab = "True RPKM", #ylab = "Estimated RPKM",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000, cor.coef.size = 4) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_GEP_3 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_3.x", y ="ref_cell_type_3.y", color = clr, title = "Normal breast",
#xlab = "True RPKM", ylab = "Estimated normal CD14+ leukapheresis (RPKM)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_GEP_4 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_4.x", y ="ref_cell_type_4.y", color = clr,title = "Lymphocytes Namalwa",
#xlab = "True RPKM", ylab = "Estimated normal fetal lung fibroblast (RPKM)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_GEP_R <- ggarrange(fig_expt_GEP_1, fig_expt_GEP_2, fig_expt_GEP_3, fig_expt_GEP_4,  ncol = 4, nrow = 1)
ggsave(filename = "fig_expt_GEP_R.jpeg",
plot = fig_expt_GEP_R,
path = "/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/BMC_bioinformatics_1/figures/fig_expt_GEP_R.png",
width = 30,
height = 10,
dpi = 300
)
fig_expt_GEP_R
ggsave(filename = "fig_expt_GEP_R.jpeg",
plot = fig_expt_GEP_R,
path = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics", #"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/BMC_bioinformatics_1/figures/fig_expt_GEP_R.png",
width = 30,
height = 10,
dpi = 300
)
fig_expt_GEP_1
fig_expt_GEP_1 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_1.x", y ="ref_cell_type_1.y", color = clr, title = "Tumor MCF7",
#xlab = "True RPKM", ylab = "Estimated RPKM",
#ylab = "Estimated RPKM (R)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) + #ylab("GEPs estimations") +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title.y = element_text(face = "bold",size = ts),axis.title.x =element_blank())
fig_expt_GEP_R <- ggarrange(fig_expt_GEP_1, fig_expt_GEP_2, fig_expt_GEP_3, fig_expt_GEP_4,  ncol = 4, nrow = 1)
ggsave(filename = "fig_expt_GEP_R.pdf",
plot = fig_expt_GEP_R,
path = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics", #"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/BMC_bioinformatics_1/figures/fig_expt_GEP_R.png",
width = 30,
height = 10,
dpi = 300
)
fig_expt_GEP_1 <- ggscatter(exptData_output_GEP_R, x = "ref_cell_type_1.x", y ="ref_cell_type_1.y", color = clr, title = "Tumor MCF7",
#xlab = "True RPKM", ylab = "Estimated RPKM",
#ylab = "Estimated RPKM (R)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) + #ylab("GEPs estimations") +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())#axis.title.y = element_text(face = "bold",size = ts),axis.title.x =element_blank())
fig_expt_GEP_R <- ggarrange(fig_expt_GEP_1, fig_expt_GEP_2, fig_expt_GEP_3, fig_expt_GEP_4,  ncol = 4, nrow = 1)
ggsave(filename = "fig_expt_GEP_R.pdf",
plot = fig_expt_GEP_R,
path = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics", #"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/BMC_bioinformatics_1/figures/fig_expt_GEP_R.png",
width = 30,
height = 10,
dpi = 300
)
#--------------------------------------------------------
# expt prop estimates by R
# matrix to data frame and merge
source("/Users/kaikang/Dropbox/Public/NIH/Project_1_R_package/CDSeqRpackage_103/Cell2RNA.R")
rownames(ExptTruePropRNAadj) <- paste("sample",1:32,sep = "_")
colnames(ExptTruePropRNAadj) <- paste("ref_cell_type",1:4,sep = "_")
ExptTruePropRNAadj_df <- as.data.frame(ExptTruePropRNAadj)
result_expt_r_rnaprop<-Cell2RNA(colSums(ExptRefGEP[,result_Expt_RR$cell_type_assignment]),result_Expt_RR$estProp)
exptData_output_prop_R <- merge(ExptTruePropRNAadj_df,t(result_expt_r_rnaprop),by="row.names")
# plot prop by R
pstn<-0.9
limts<-1
fig_expt_prop_1 <- ggscatter(exptData_output_prop_R, x = "ref_cell_type_1.x", y ="ref_cell_type_1.y", color = clr, title = "Tumor MCF7",
#xlab = "True RPKM", ylab = "Estimated RPKM",
#ylab = "Estimated RPKM (R)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) + ylab("Proportions estimations")+
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title.y = element_text(face = "bold",size = ts),axis.title.x =element_blank())
fig_expt_prop_2 <- ggscatter(exptData_output_prop_R, x = "ref_cell_type_2.x", y ="ref_cell_type_2.y", color = clr, title = "CAFs Hs 343T",
#xlab = "True RPKM", #ylab = "Estimated RPKM",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000, cor.coef.size = 4) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_prop_3 <- ggscatter(exptData_output_prop_R, x = "ref_cell_type_3.x", y ="ref_cell_type_3.y", color = clr, title = "Normal breast",
#xlab = "True RPKM", ylab = "Estimated normal CD14+ leukapheresis (RPKM)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_prop_4 <- ggscatter(exptData_output_prop_R, x = "ref_cell_type_4.x", y ="ref_cell_type_4.y", color = clr,title = "Lymphocytes Namalwa",
#xlab = "True RPKM", ylab = "Estimated normal fetal lung fibroblast (RPKM)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) +
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())
fig_expt_prop_R <- ggarrange(fig_expt_prop_1, fig_expt_prop_2, fig_expt_prop_3, fig_expt_prop_4,  ncol = 4, nrow = 1)
ggsave(filename = "fig_expt_prop_R.pdf",
path = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures/fig_expt_prop_R_rr.tif",
fig_expt_prop_R,
width = 30,
height = 10,
dpi = 300
)
fig_expt_prop_1 <- ggscatter(exptData_output_prop_R, x = "ref_cell_type_1.x", y ="ref_cell_type_1.y", color = clr, title = "Tumor MCF7",
#xlab = "True RPKM", ylab = "Estimated RPKM",
#ylab = "Estimated RPKM (R)",
size = dotsize, alpha = dotshade, cor.coef=TRUE, cor.method = "pearson", cor.coef.coord = c(0,pstn), cor.coef.size = cs) +
#stat_cor(method = "pearson", label.x = 0, label.y = 10000) +
geom_abline(intercept = 0, slope = 1, color="black",size=0.5) + border() + coord_fixed(xlim = c(0,limts), ylim = c(0,limts) ) + ylab("Proportions estimations")+
theme(plot.title = element_text(hjust = 0.5,size = ts,face = "bold"), axis.text =element_text(face = "bold",size = ats),axis.title=element_blank())#axis.title.y = element_text(face = "bold",size = ts),axis.title.x =element_blank())
fig_expt_prop_R <- ggarrange(fig_expt_prop_1, fig_expt_prop_2, fig_expt_prop_3, fig_expt_prop_4,  ncol = 4, nrow = 1)
ggsave(filename = "fig_expt_prop_R.pdf",
path = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics",
#"/Users/kangk3/Dropbox/Public/NIH/Project_1_R_package/Bioinformatics_AppNote/figures/fig_expt_prop_R_rr.tif",
fig_expt_prop_R,
width = 30,
height = 10,
dpi = 300
)
