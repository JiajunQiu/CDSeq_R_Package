?CDSeq
devtools::use_vignette("my-vignette")
library(devtools)
devtools::use_vignette("my-vignette")
install.packages("usethis")
usethis::use_vignette("CDSeq-vignette")
?CDSeq
library(CDSeq)
?CDSeq
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number = 6, mcmc_iterations = 10,
dilution_factor = 1, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=1, print_progress_msg_to_file=1)
result$processIDs
result$gibbsRunningTime
result
ls(result)
dim(result$estGEP)
dim(result$estProp)
class(result$estProp)
class(result$estGEP)
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number=2:8, mcmc_iterations = 10,
dilution_factor = 1, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=2, print_progress_msg_to_file=1)
dim(mixtureGEP)
dim(refGEP)
?CDSeq
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number=2:6, mcmc_iterations = 10,
dilution_factor = 1, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=2, print_progress_msg_to_file=0)
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number=7, mcmc_iterations = 10,
dilution_factor = 1, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=1, print_progress_msg_to_file=0)
max(c(1,2,3))
max(3)
library(CDSeq)
?CDSeq
install.packages("testthat")
devtools::document()
install.packages("devtools")
library(ddevtools)
library(devtools)
devtools::document()
library(CDSeq)
data("SyntheticMixtureData")
library(CDSeq)
library(CDSeq)
devtools::document()
library(CDSeq)
devtools::document()
devtools::document()
library(CDSeq)
library(CDSeq)
?`CDSeq-R-package`
?CDSeq
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number=2:8, mcmc_iterations = 10,
dilution_factor = 1, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=2, print_progress_msg_to_file=0)
ls(result)
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
lines(c(0,1),c(0,1), type = "l")
}
}
dim(true_GEP_gene)
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], true_GEP_gene[,j]))
lines(c(0,1),c(0,1), type = "l")
}
}
dim(result$estGEP)
library(CDSeq)
result<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 6,
mcmc_iterations = 700,
dilution_factor = 10,
block_number = 1,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 1,
print_progress_msg_to_file = 1)
library(CDSeq)
result<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 6,
mcmc_iterations = 700,
dilution_factor = 10,
block_number = 1,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 1,
print_progress_msg_to_file = 1)
detach("package:CDSeq", unload = TRUE)
library(CDSeq)
result<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 6,
mcmc_iterations = 700,
dilution_factor = 10,
block_number = 1,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 1,
print_progress_msg_to_file = 1)
dim(result$cell_type_assignment)
dim(refGEP)
dim(result$estGEP)
dim(true_GEP_gene)
colSums(true_GEP_gene)
colSums(result$estGEP)
colSums(true_GEP_rpkm)
result$gibbsRunningTime
result$cell_type_assignment
dim(true_GEP_rpkm)
CDSeq_estGEP <- result$estGEP[result$cell_type_assignment,]
par(mar=c(1,1,1,1))
par(mfrow=c(2,3))
for (i in 1:6) {
plot(CDSeq_estGEP[,i],true_GEP_rpkm[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], true_GEP_rpkm[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
dim(CDSeq_estGEP)
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(2,3))
for (i in 1:6) {
plot(CDSeq_estGEP[,i],true_GEP_rpkm[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_gene[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i],true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i]/sum(result$estGEP[,i]),true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
result<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 6,
mcmc_iterations = 700,
dilution_factor = 1,
block_number = 1,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 1,
print_progress_msg_to_file = 0)
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result$estGEP[,i]/sum(result$estGEP[,i]),true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
CDSeq_estGEP <- result$estGEP[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(CDSeq_estGEP[,i],true_GEP_rpkm[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(CDSeq_estGEP[,i], true_GEP_rpkm[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(1,1,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(2,1,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,1,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,2,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,2,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,1,2))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,1,4))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
trueGEP <- true_GEP_rpkm[,result$cell_type_assignment]
par(mar=c(4,4,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 10,
fig.height = 7,
fig.align = 'center'
)
ls(result)
dim(true_prop_cell)
dim(result$estProp)
result$gibbsRunningTime
result$gibbsRunningTime
result2<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 2:10,
mcmc_iterations = 700,
dilution_factor = 1,
block_number = 1,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 8, # use multiple cores to save time
print_progress_msg_to_file = 0)
dim(result2$estGEP)
trueGEP <- true_GEP_rpkm[,result2$cell_type_assignment]
par(mar=c(4,4,1,1))
par(mfrow=c(2,3))
par(pty="s")
for (i in 1:6) {
plot(result2$estGEP[,i],trueGEP[,i],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
result2$cell_type_assignment
cor(result2$estGEP,true_GEP_rpkm)
par(mar=c(4,4,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result2$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], trueGEP[,i]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
par(mar=c(4,4,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result2$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
par(mar=c(4,4,1,1))
par(mfrow=c(6,6))
#par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result2$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result2$estGEP[,i],true_GEP_rpkm[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], true_GEP_rpkm[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
plot(2:10,result2$lgpst)
length(result2$lgpst)
vector(0,2)
rep(0.2)
rep(0,2)
rep(0,9)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[1]]$lgpst
}
plot(2:10,lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[1]]$lgpst
}
plot(2:10,lgpst,ylim = range(lgpst))
range(1:5)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,ylim = range(lgpst))
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,ylim = range(lgpst), xlab = "number of cell typess", ylab = "log posterior")
lines(x, y, ylim=range(f_x))
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,ylim = range(lgpst), xlab = "number of cell typess", ylab = "log posterior")
lines(x, y, ylim=range(y))
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,ylim = range(lgpst), xlab = "number of cell typess", ylab = "log posterior")
lines(2:10, lgpst, ylim=range(lgpst))
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
lines(2:10, lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
plot(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
points(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
lines(2:10, lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red",size=10)
lines(2:10, lgpst)
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lines(6,lgpst[5])
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lines(c(6,6),c(0,lgpst[5])
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lines(c(6,6),c(0,lgpst[5]))
lgpst <- rep(0,9)
for (i in 1:9) {
lgpst[i] <- result2$est_all[[i]]$lgpst
}
plot(2:10,lgpst,xlab = "number of cell typess", ylab = "log posterior")
points(6,lgpst[5],pch=16,col="red")
lines(2:10, lgpst)
lines(c(6,6),c(0,lgpst[5]),lty=2)
par(mar=c(1,1,1,1))
par(mfrow=c(6,6))
par(pty="s")
for (i in 1:6) {
for (j in 1:6) {
plot(result2$estGEP[,i],true_GEP_gene[,j],xlab = "CDSeq-estimated GEPs", ylab = "True GEPs")
max_v <- max(c(result2$estGEP[,i], true_GEP_gene[,j]))
lines(c(0,max_v),c(0,max_v), type = "l")
}
}
result3<-CDSeq(bulk_data =  mixtureGEP,
cell_type_number = 6,
mcmc_iterations = 700,
dilution_factor = 1,
block_number = 10,
gene_subset_size = 100,
gene_length = as.vector(gene_length),
reference_gep = refGEP,
cpu_number = 10,
print_progress_msg_to_file = 0)
